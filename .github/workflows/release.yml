name: Go Release Binaries

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Build binary
        run: |
          CGO_ENABLED=0 \
          GOOS=${{ matrix.goos }} \
          GOARCH=${{ matrix.goarch }} \
          go build -v \
            -ldflags "-s -w -X 'main.version=${{ github.ref_name }}'" \
            -o imgz-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} \
            .

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: imgz-${{ matrix.goos }}-${{ matrix.goarch }}
          path: imgz-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries/
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          generate_release_notes: true
          files: binaries/*
